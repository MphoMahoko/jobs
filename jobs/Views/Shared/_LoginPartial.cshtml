@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (!SignInManager.IsSignedIn(User))
{
    <!-- <ul class="nav navbar-nav navbar-right"> -->
    <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
    <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    <!-- </ul> -->
}
else
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="form-inline">

        


     

        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"  asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
           
            <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                @if (@UserManager.GetUserAsync(User).Result.Position == "Employer")
                {
                    @Html.ActionLink("Add a jobs", "Create", "Jobs","", new {@class="dropdown-item" })

                    @Html.ActionLink("Posted jobs", "PostedJobs", "Jobs","", new { @class = "dropdown-item" })

                    @Html.ActionLink("Profile", "Single", "BusinessProfile", "", new { @class = "dropdown-item" })
                }

                else
                {
                    @Html.ActionLink("Applied jobs", "Applied", "Jobs", "", new { @class = "dropdown-item" })

                    @Html.ActionLink("Profile", "Details", "Profiles", "", new { @class = "dropdown-item" })

                    @Html.ActionLink("Inbox", "Index", "Messages", "", new { @class = "dropdown-item" })
                }
                <button type="submit" class="btn btn-link navbar-btn navbar-link dropdown-item">Logout</button>
                
            </div>
        </li>

    </form>


}